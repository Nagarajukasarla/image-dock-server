# Image Dock Server - Environment Configuration Example
# Copy this file to .env and fill in your actual values

# ========================================
# SERVER CONFIGURATION
# ========================================
# Port number for the server to listen on
PORT=8081

# AWS Region (use 'auto' for Cloudflare R2)
AWS_REGION=auto

# ========================================
# CLOUD STORAGE CONFIGURATION
# ========================================
# Your S3-compatible storage bucket name
S3_BUCKET=your-bucket-name

# S3 endpoint URL (for Cloudflare R2, AWS S3, MinIO, etc.)
# Cloudflare R2 example: https://your-account-id.r2.cloudflarestorage.com
# AWS S3 example: https://s3.amazonaws.com (or region-specific)
# MinIO example: http://your-minio-server:9000
S3_ENDPOINT=https://your-account-id.r2.cloudflarestorage.com

# S3 Access Credentials
# Get these from your cloud storage provider's dashboard
S3_ACCESS_KEY_ID=your-access-key-id-here
S3_SECRET_ACCESS_KEY=your-secret-access-key-here

# ========================================
# UPLOAD CONFIGURATION
# ========================================
# Directory prefix for uploaded files in your bucket
# Leave as 'uploads/' for organized storage
UPLOAD_DIR=uploads/

# ========================================
# DATABASE CONFIGURATION
# ========================================
# Database connection details
# For local PostgreSQL: postgres://username:password@localhost:5432/database
# For cloud PostgreSQL (like Aiven, AWS RDS, etc.)
DB_USER=your-db-username
DB_PASSWORD=your-db-password
DATABASE_URL=postgres://username:password@host:port/database?sslmode=require

# ========================================
# PUBLIC ACCESS CONFIGURATION
# ========================================
# Public base URL for accessing uploaded files
# This should match your bucket's public domain or CDN
# Cloudflare R2 example: https://pub-your-hash.r2.dev
# AWS S3 example: https://your-bucket.s3.amazonaws.com
# Custom domain example: https://cdn.yourdomain.com
PUBLIC_URL_BASE=https://your-public-domain.r2.dev

# ========================================
# SECURITY NOTES
# ========================================
# IMPORTANT SECURITY REMINDERS:
#
# 1. NEVER commit your actual .env file to version control
# 2. Use strong, unique passwords for all services
# 3. Rotate access keys regularly
# 4. Use secret management services in production
# 5. Enable SSL/TLS for all connections
#
# ========================================
# SETUP INSTRUCTIONS
# ========================================
#
# 1. Copy this file: cp .env.example .env
# 2. Fill in all the values above with your actual credentials
# 3. Ensure your PostgreSQL database is running and accessible
# 4. Verify your cloud storage bucket exists and is accessible
# 5. Test your configuration before deploying to production
#
# ========================================
